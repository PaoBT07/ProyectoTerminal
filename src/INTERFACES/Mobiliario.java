/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package INTERFACES;

import ConexionBD.Conexion;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Paola Barrera Tenorio 2192007348
 */
public class Mobiliario extends javax.swing.JFrame {

    /**
     * Creates new form Mobiliario
     */
    public Mobiliario() {
        initComponents();
        
        this.setTitle("Panificadora La Izcalli");
        this.setLocationRelativeTo(Mobiliario.this);
        this.setResizable(false);
        
        Mostrar("Mobiliario");
        LimpiarCampos();
        TxtFields();
        txtArea.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        panel3 = new javax.swing.JPanel();
        btnRegresarM = new javax.swing.JButton();
        lblNombreM = new javax.swing.JLabel();
        lblCantidadM = new javax.swing.JLabel();
        lblMaterialM = new javax.swing.JLabel();
        lblEstadoM = new javax.swing.JLabel();
        txtNombreM = new javax.swing.JTextField();
        txtCantidadM = new javax.swing.JTextField();
        txtMaterialM = new javax.swing.JTextField();
        txtEstadoM = new javax.swing.JTextField();
        btnBuscarM = new javax.swing.JButton();
        btnAgregarM = new javax.swing.JButton();
        btnActualizarM = new javax.swing.JButton();
        btnEliminarM = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaMobiliario = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtArea = new javax.swing.JTextArea();
        btnRegresar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 245, 225));

        jPanel2.setBackground(new java.awt.Color(1, 87, 155));

        jLabel1.setFont(new java.awt.Font("STLiti", 0, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("- Mobiliario -");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(405, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(389, 389, 389))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        panel3.setBackground(new java.awt.Color(1, 87, 155));

        btnRegresarM.setBackground(new java.awt.Color(255, 245, 225));
        btnRegresarM.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        btnRegresarM.setText("Regresar al menú");
        btnRegresarM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarMActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel3Layout = new javax.swing.GroupLayout(panel3);
        panel3.setLayout(panel3Layout);
        panel3Layout.setHorizontalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel3Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(btnRegresarM)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel3Layout.setVerticalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel3Layout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addComponent(btnRegresarM)
                .addGap(37, 37, 37))
        );

        lblNombreM.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        lblNombreM.setText("Nombre");

        lblCantidadM.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        lblCantidadM.setText("Cantidad");

        lblMaterialM.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        lblMaterialM.setText("Material");

        lblEstadoM.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        lblEstadoM.setText("Estado");

        txtNombreM.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N

        txtCantidadM.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N

        txtMaterialM.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N

        txtEstadoM.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N

        btnBuscarM.setBackground(new java.awt.Color(1, 87, 155));
        btnBuscarM.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        btnBuscarM.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscarM.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Buscar.png"))); // NOI18N
        btnBuscarM.setText("Buscar");
        btnBuscarM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarMActionPerformed(evt);
            }
        });

        btnAgregarM.setBackground(new java.awt.Color(1, 87, 155));
        btnAgregarM.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        btnAgregarM.setForeground(new java.awt.Color(255, 255, 255));
        btnAgregarM.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Agregar.png"))); // NOI18N
        btnAgregarM.setText("Agregar");
        btnAgregarM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarMActionPerformed(evt);
            }
        });

        btnActualizarM.setBackground(new java.awt.Color(1, 87, 155));
        btnActualizarM.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        btnActualizarM.setForeground(new java.awt.Color(255, 255, 255));
        btnActualizarM.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Actualizar.png"))); // NOI18N
        btnActualizarM.setText("Actualizar");
        btnActualizarM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarMActionPerformed(evt);
            }
        });

        btnEliminarM.setBackground(new java.awt.Color(1, 87, 155));
        btnEliminarM.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        btnEliminarM.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminarM.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/borrar.png"))); // NOI18N
        btnEliminarM.setText("Eliminar");
        btnEliminarM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarMActionPerformed(evt);
            }
        });

        TablaMobiliario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TablaMobiliario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaMobiliarioMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaMobiliario);

        txtArea.setColumns(20);
        txtArea.setFont(new java.awt.Font("Bell MT", 0, 14)); // NOI18N
        txtArea.setRows(5);
        txtArea.setText("BUSCAR MATERIAL\nEscriba su nombre y presione el botón buscar \n\nAGREGAR MATERIAL\nLlene todos los campos con su información y presione agregar\n\nACTUALIZAR DATOS\nSeleccione el registro en la tabla, modifique el dato y presione el botón actualizar\n\n\nELIMINAR MATERIAL\nSeleccione el registro y presione el botón eliminar\n");
        jScrollPane2.setViewportView(txtArea);

        btnRegresar.setBackground(new java.awt.Color(1, 87, 155));
        btnRegresar.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        btnRegresar.setForeground(new java.awt.Color(255, 255, 255));
        btnRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Regreso.png"))); // NOI18N
        btnRegresar.setText("Regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblNombreM)
                                        .addGap(18, 18, 18))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblCantidadM)
                                        .addGap(11, 11, 11)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtCantidadM)
                                    .addComponent(txtNombreM, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblMaterialM)
                                .addGap(18, 18, 18)
                                .addComponent(txtMaterialM, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblEstadoM)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtEstadoM, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(103, 103, 103))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRegresar)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btnEliminarM, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnActualizarM, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBuscarM, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAgregarM, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(148, 148, 148))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 981, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNombreM)
                            .addComponent(txtNombreM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCantidadM)
                            .addComponent(txtCantidadM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMaterialM)
                            .addComponent(txtMaterialM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEstadoM)
                            .addComponent(txtEstadoM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnActualizarM)
                        .addGap(16, 16, 16)
                        .addComponent(btnAgregarM)
                        .addGap(15, 15, 15)
                        .addComponent(btnBuscarM)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEliminarM)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRegresar)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(panel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegresarMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarMActionPerformed
        MenuInventario inventario = new MenuInventario();
        inventario.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnRegresarMActionPerformed

//Botón Agregar Mobiliario
    private void btnAgregarMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarMActionPerformed
    AgregarMoviliario();
    }//GEN-LAST:event_btnAgregarMActionPerformed
        
//------------------------------------------------------------------------------
    //Autollenado de los campos al seleccionar un registro
//------------------------------------------------------------------------------    
    private void TablaMobiliarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaMobiliarioMouseClicked
        try{
            int fila = TablaMobiliario.getSelectedRow();
            int id = Integer.parseInt(TablaMobiliario.getValueAt(fila, 0).toString());
            
            PreparedStatement ps;
            ResultSet rs;
            
            java.sql.Connection con =  Conexion.conectar();
            ps = con.prepareStatement("SELECT Mo_Nombre, Mo_Cantidad, Mo_Material, Mo_Estado FROM mobiliario WHERE idMobiliario=?");
            ps.setInt(1, id);
            rs = ps.executeQuery();
            
            while(rs.next()){
            txtNombreM.setText(rs.getString("Mo_Nombre"));
            txtCantidadM.setText(rs.getString("Mo_Cantidad"));
            txtMaterialM.setText(rs.getString("Mo_Material"));
            txtEstadoM.setText(rs.getString("Mo_Estado"));
            }
       
       }catch(SQLException e){
           JOptionPane.showMessageDialog(null, e);
       }
    }//GEN-LAST:event_TablaMobiliarioMouseClicked
//------------------------------------------------------------------------------
    
//Botón Actualizar Mobiliario
    private void btnActualizarMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarMActionPerformed
         ActualizarMobiliario();
    }//GEN-LAST:event_btnActualizarMActionPerformed

//Botón Eliminar Mobiliario
    private void btnEliminarMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarMActionPerformed
        EliminarMobiliario();
    }//GEN-LAST:event_btnEliminarMActionPerformed

//Botón Buscar Mobiliario
    private void btnBuscarMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarMActionPerformed
      BuscarMobiliario();
    }//GEN-LAST:event_btnBuscarMActionPerformed

//Botón Regresar
    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        LimpiarCampos();
        Mostrar("mobiliario");
    }//GEN-LAST:event_btnRegresarActionPerformed
//------------------------------------------------------------------------------
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mobiliario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mobiliario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mobiliario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mobiliario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Mobiliario().setVisible(true);
            }
        });
    }

//------------------------------------------------------------------------------
    //Método para mostrar los registros en la tabla Mobiliario
//------------------------------------------------------------------------------
    public void Mostrar(String tabla) {
    String sql = "SELECT * FROM " + tabla;
    Conexion con = new Conexion();
    java.sql.Connection conexion = con.conectar();

    DefaultTableModel model = new DefaultTableModel();
    String[] columnas = {"ID", "Nombre", "Cantidad", "Material", "Estado"};
    
    
    for (String columna : columnas) {
        model.addColumn(columna);
    }

    TablaMobiliario.setRowSorter(null);
    TablaMobiliario.setModel(model);

    try (java.sql.Statement st = conexion.createStatement(); ResultSet rs = st.executeQuery(sql)) {
        while (rs.next()) {
            String[] datos = new String[columnas.length];
            for (int i = 0; i < columnas.length; i++) {
                datos[i] = rs.getString(i + 1);
            }
          
            model.addRow(datos);
        }
        
        // Modificar el ancho de las columnas
        TableColumnModel modeloColumnas = TablaMobiliario.getColumnModel();
        modeloColumnas.getColumn(0).setPreferredWidth(1);  // ID
        modeloColumnas.getColumn(1).setPreferredWidth(10); // Nombre
        modeloColumnas.getColumn(2).setPreferredWidth(10); // Cantidad
        modeloColumnas.getColumn(3).setPreferredWidth(10); // Material
        modeloColumnas.getColumn(4).setPreferredWidth(30); // Estado
        
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Error en executeQuery: " + e.getMessage());
    } finally {
        try {
            if (conexion != null && !conexion.isClosed()) {
                conexion.close();
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error al cerrar la conexión: " + ex.getMessage());
        }
    }
}
//------------------------------------------------------------------------------
    
    
//------------------------------------------------------------------------------
    //Método para agregar registros a la tabla
//------------------------------------------------------------------------------

private void AgregarMoviliario(){

    String nombreMobiliario = txtNombreM.getText();
    int cantidadMobiliario = Integer.parseInt(txtCantidadM.getText()); 
    String materialMobiliario = txtMaterialM.getText();
    String estadoMobiliario = txtEstadoM.getText(); 
    
  
    try {
        java.sql.Connection con =  Conexion.conectar(); 
        PreparedStatement ps = con.prepareStatement("INSERT INTO mobiliario (Mo_Nombre, Mo_Cantidad, Mo_Material, 	Mo_Estado) VALUES (?,?,?,?)");

        ps.setString(1, nombreMobiliario);
        ps.setInt(2, cantidadMobiliario);
        ps.setString(3, materialMobiliario);
        ps.setString(4, estadoMobiliario);
         
        ps.executeUpdate();
        JOptionPane.showMessageDialog(null, "Registro guardado");
        
        //Actualizar la tabla para que aparezca el registro nuevo
        Mostrar("mobiliario");
        
        //Después de guardar el registro limpiar los campos 
        LimpiarCampos();
        
        con.close(); // Cierra la conexión

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error al guardar: " + e.getMessage());
    }

}
//---------------------------------------------------------------------------


//------------------------------------------------------------------------------
    //Método de actualizar los registros de la tabla
//------------------------------------------------------------------------------

private void ActualizarMobiliario(){

    int fila = TablaMobiliario.getSelectedRow();
    int id = Integer.parseInt(TablaMobiliario.getValueAt(fila, 0).toString());
    String nombreMobiliario = txtNombreM.getText();
    int cantidadMobiliario = Integer.parseInt(txtCantidadM.getText()); 
    String materialMobiliario = txtMaterialM.getText();
    String estadoMobiliario = txtEstadoM.getText(); 
    
   
    try {
        java.sql.Connection con =  Conexion.conectar(); 
        PreparedStatement ps = con.prepareStatement("UPDATE mobiliario SET Mo_Nombre=?, Mo_Cantidad=?, Mo_Material=?, Mo_Estado=? WHERE idMobiliario=?");

        ps.setString(1, nombreMobiliario);
        ps.setInt(2, cantidadMobiliario);
        ps.setString(3, materialMobiliario);
        ps.setString(4, estadoMobiliario);
        ps.setInt(5,id);
        
        ps.executeUpdate();
        JOptionPane.showMessageDialog(null, "Registro actualizado");
        
        //Actualizar la tabla para que aparezca el registro nuevo
        Mostrar("mobiliario");
        
        //Después de actualizar el registro, limpia los campos 
        LimpiarCampos();
        
        con.close(); // Cierra la conexión

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error al guardar: " + e.getMessage());
    }

}
//-------------------------------------------------------------------------------



//------------------------------------------------------------------------------
    //Método para eliminar un registro de la tabla
//------------------------------------------------------------------------------

public void EliminarMobiliario(){

    int fila = TablaMobiliario.getSelectedRow();
    int id = Integer.parseInt(TablaMobiliario.getValueAt(fila, 0).toString());
    
    try {
        java.sql.Connection con =  Conexion.conectar(); 
        PreparedStatement ps = con.prepareStatement("DELETE FROM mobiliario WHERE idMobiliario=?");

        ps.setInt(1, id);

        ps.executeUpdate();
        JOptionPane.showMessageDialog(null, "Registro eliminado");
        
        //Actualizar la tabla para que aparezca el registro nuevo
        Mostrar("mobiliario");
        
        //Después de actualizar el registro, limpia los campos 
        LimpiarCampos();
        
        con.close(); // Cierra la conexión

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error al guardar: " + e.getMessage());
    }
}
//-------------------------------------------------------------------------------


//------------------------------------------------------------------------------
    //Método para buscar un registro de la tabla 
//------------------------------------------------------------------------------

 private void BuscarMobiliario(){

    TableRowSorter<TableModel> sorter = new TableRowSorter<>(TablaMobiliario.getModel());
    TablaMobiliario.setRowSorter(sorter);
    
    String textoBusqueda = txtNombreM.getText().trim();
    
    if (textoBusqueda.isEmpty()) {
        sorter.setRowFilter(null); // Muestra todos los registros si el campo está vacío
    } else {
        sorter.setRowFilter(RowFilter.regexFilter("(?i)" + textoBusqueda)); // Filtra ignorando mayúsculas/minúsculas
    }

}
//------------------------------------------------------------------------------

    
//------------------------------------------------------------------------------
  //Método para limpiar los campos
//------------------------------------------------------------------------------    
private void LimpiarCampos(){

        txtNombreM.setText("");
        txtCantidadM.setText("");
        txtMaterialM.setText("");
        txtEstadoM.setText("");

}
//------------------------------------------------------------------------------


//------------------------------------------------------------------------------
    //Método para limitar a escribir solo números en los Textfield
//------------------------------------------------------------------------------
    private void limitarNumeros(JTextField textField) {
        textField.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (!Character.isDigit(c)) { // Solo permite números
                    e.consume(); // Bloquea la entrada si no es un número
                }
            }
        });
    }
//------------------------------------------------------------------------------
    
    
//------------------------------------------------------------------------------
    //Método para txtFields
//------------------------------------------------------------------------------
    private void TxtFields(){
    
    limitarNumeros(txtCantidadM);
    }
//------------------------------------------------------------------------------

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaMobiliario;
    private javax.swing.JButton btnActualizarM;
    private javax.swing.JButton btnAgregarM;
    private javax.swing.JButton btnBuscarM;
    private javax.swing.JButton btnEliminarM;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JButton btnRegresarM;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCantidadM;
    private javax.swing.JLabel lblEstadoM;
    private javax.swing.JLabel lblMaterialM;
    private javax.swing.JLabel lblNombreM;
    private javax.swing.JPanel panel3;
    private javax.swing.JTextArea txtArea;
    private javax.swing.JTextField txtCantidadM;
    private javax.swing.JTextField txtEstadoM;
    private javax.swing.JTextField txtMaterialM;
    private javax.swing.JTextField txtNombreM;
    // End of variables declaration//GEN-END:variables
}
