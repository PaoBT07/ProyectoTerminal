/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package INTERFACES;

import ConexionBD.Conexion;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Paola Barrera Tenorio 2192007348
 */
public class MaterialesEmpaque extends javax.swing.JFrame {

    /**
     * Creates new form MaterialesEmpaque
     */
    public MaterialesEmpaque() {
        initComponents();
        
        this.setTitle("Panificadora La Izcalli");
        this.setLocationRelativeTo(MaterialesEmpaque.this);
        this.setResizable(false);
        
        Mostrar("Materiales_Empaque");
        TxtFields();
        txtArea.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lblMaterialesEmpaque = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btnRegresarME = new javax.swing.JButton();
        lblNombreME = new javax.swing.JLabel();
        lblCantidadME = new javax.swing.JLabel();
        lblTipoMaterialME = new javax.swing.JLabel();
        txtNombreME = new javax.swing.JTextField();
        txtCantidadME = new javax.swing.JTextField();
        txtTipoMaterialME = new javax.swing.JTextField();
        btnBuscarME = new javax.swing.JButton();
        btnAgregarME = new javax.swing.JButton();
        btnActualizarME = new javax.swing.JButton();
        btnEliminarME = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaME = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtArea = new javax.swing.JTextArea();
        btnRegresar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 245, 225));

        jPanel2.setBackground(new java.awt.Color(1, 87, 155));

        lblMaterialesEmpaque.setFont(new java.awt.Font("STLiti", 0, 48)); // NOI18N
        lblMaterialesEmpaque.setForeground(new java.awt.Color(255, 255, 255));
        lblMaterialesEmpaque.setText("- Materiales de Empaque -");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(270, 270, 270)
                .addComponent(lblMaterialesEmpaque, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lblMaterialesEmpaque)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(1, 87, 155));

        btnRegresarME.setBackground(new java.awt.Color(255, 245, 225));
        btnRegresarME.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        btnRegresarME.setText("Regresar al menú");
        btnRegresarME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarMEActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(btnRegresarME)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(btnRegresarME)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        lblNombreME.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        lblNombreME.setText("Nombre");

        lblCantidadME.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        lblCantidadME.setText("Cantidad");

        lblTipoMaterialME.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        lblTipoMaterialME.setText("Tipo de material");

        txtNombreME.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N

        txtCantidadME.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N

        txtTipoMaterialME.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N

        btnBuscarME.setBackground(new java.awt.Color(1, 87, 155));
        btnBuscarME.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        btnBuscarME.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscarME.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Buscar.png"))); // NOI18N
        btnBuscarME.setText("Buscar");
        btnBuscarME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarMEActionPerformed(evt);
            }
        });

        btnAgregarME.setBackground(new java.awt.Color(1, 87, 155));
        btnAgregarME.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        btnAgregarME.setForeground(new java.awt.Color(255, 255, 255));
        btnAgregarME.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Agregar.png"))); // NOI18N
        btnAgregarME.setText("Agregar");
        btnAgregarME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarMEActionPerformed(evt);
            }
        });

        btnActualizarME.setBackground(new java.awt.Color(1, 87, 155));
        btnActualizarME.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        btnActualizarME.setForeground(new java.awt.Color(255, 255, 255));
        btnActualizarME.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Actualizar.png"))); // NOI18N
        btnActualizarME.setText("Actualizar");
        btnActualizarME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarMEActionPerformed(evt);
            }
        });

        btnEliminarME.setBackground(new java.awt.Color(1, 87, 155));
        btnEliminarME.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        btnEliminarME.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminarME.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/borrar.png"))); // NOI18N
        btnEliminarME.setText("Eliminar");
        btnEliminarME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarMEActionPerformed(evt);
            }
        });

        TablaME.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        TablaME.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TablaME.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaMEMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaME);

        txtArea.setBackground(new java.awt.Color(255, 245, 225));
        txtArea.setColumns(20);
        txtArea.setFont(new java.awt.Font("Bell MT", 0, 14)); // NOI18N
        txtArea.setRows(5);
        txtArea.setText("BUSCAR MATERIAL\nEscriba su nombre y presione el botón buscar \n\nAGREGAR MATERIAL\nLlene todos los campos con su información y presione agregar\n\nACTUALIZAR DATOS\nSeleccione el registro en la tabla, modifique el dato y presione el botón actualizar\n\nELIMINAR MATERIAL\nSeleccione el registro y presione el botón eliminar");
        jScrollPane2.setViewportView(txtArea);

        btnRegresar.setBackground(new java.awt.Color(1, 87, 155));
        btnRegresar.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        btnRegresar.setForeground(new java.awt.Color(255, 255, 255));
        btnRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Regreso.png"))); // NOI18N
        btnRegresar.setText("Regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(183, 183, 183)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(lblCantidadME)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtCantidadME, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(lblTipoMaterialME)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtTipoMaterialME, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(lblNombreME)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNombreME)))
                        .addGap(131, 131, 131)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRegresar)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnActualizarME, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnAgregarME, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnBuscarME, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnEliminarME, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 975, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNombreME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNombreME))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCantidadME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCantidadME, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTipoMaterialME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTipoMaterialME)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnActualizarME)
                        .addGap(15, 15, 15)
                        .addComponent(btnAgregarME)
                        .addGap(14, 14, 14)
                        .addComponent(btnBuscarME)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEliminarME)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRegresar)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegresarMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarMEActionPerformed
        MenuInventario inventario = new MenuInventario();
        inventario.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnRegresarMEActionPerformed

//Botón Agregar Material
    private void btnAgregarMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarMEActionPerformed
        AgregarME();
    }//GEN-LAST:event_btnAgregarMEActionPerformed
    
    
//------------------------------------------------------------------------------
    //Autollenado de los campos al seleccionar un registro
//------------------------------------------------------------------------------    
    private void TablaMEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaMEMouseClicked
        
        try{
            int fila = TablaME.getSelectedRow();
            int id = Integer.parseInt(TablaME.getValueAt(fila, 0).toString());
            
            PreparedStatement ps;
            ResultSet rs;
            
            java.sql.Connection con =  Conexion.conectar();
            ps = con.prepareStatement("SELECT ME_Nombre, ME_Cantidad, ME_TipoMaterial FROM materiales_empaque WHERE idMateriales_Empaque=?");
            ps.setInt(1, id);
            rs = ps.executeQuery();
            
            while(rs.next()){
            txtNombreME.setText(rs.getString("ME_Nombre"));
            txtCantidadME.setText(rs.getString("ME_Cantidad"));
            txtTipoMaterialME.setText(rs.getString("ME_TipoMaterial"));
            }
       
       }catch(SQLException e){
           JOptionPane.showMessageDialog(null, e);
       }
    }//GEN-LAST:event_TablaMEMouseClicked
    
//Botón Actualizar Material 
    private void btnActualizarMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarMEActionPerformed
        ActualizarME();
    }//GEN-LAST:event_btnActualizarMEActionPerformed
    
//Botón Eliminar Material
    private void btnEliminarMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarMEActionPerformed
        EliminarME();
    }//GEN-LAST:event_btnEliminarMEActionPerformed
    
//Botón Buscar Material
    private void btnBuscarMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarMEActionPerformed
       BuscarME();
    }//GEN-LAST:event_btnBuscarMEActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        LimpiarCampos();
        Mostrar("materiales_empaque");
    }//GEN-LAST:event_btnRegresarActionPerformed
//------------------------------------------------------------------------------
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MaterialesEmpaque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MaterialesEmpaque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MaterialesEmpaque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MaterialesEmpaque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MaterialesEmpaque().setVisible(true);
            }
        });
    }

//------------------------------------------------------------------------------
    //Método para mostrar los registros en la tabla Materiales de Empaque    
//------------------------------------------------------------------------------
    public void Mostrar(String tabla) {
    String sql = "SELECT * FROM " + tabla;
    Conexion con = new Conexion();
    java.sql.Connection conexion = con.conectar();

    DefaultTableModel model = new DefaultTableModel();
    String[] columnas = {"ID", "Nombre", "Cantidad", "Tipo de Material"};
    
    
    for (String columna : columnas) {
        model.addColumn(columna);
    }

    TablaME.setRowSorter(null);
    TablaME.setModel(model);

    try (java.sql.Statement st = conexion.createStatement(); ResultSet rs = st.executeQuery(sql)) {
        while (rs.next()) {
            String[] datos = new String[columnas.length];
            for (int i = 0; i < columnas.length; i++) {
                datos[i] = rs.getString(i + 1);
            }
          
            model.addRow(datos);
        }
        
        // Modificar el ancho de las columnas
        TableColumnModel modeloColumnas = TablaME.getColumnModel();
        modeloColumnas.getColumn(0).setPreferredWidth(1);  // ID
        modeloColumnas.getColumn(1).setPreferredWidth(10); // Nombre
        modeloColumnas.getColumn(2).setPreferredWidth(10); // Cantidad
        modeloColumnas.getColumn(3).setPreferredWidth(10); // TipoMaterial
      
        
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Error en executeQuery: " + e.getMessage());
    } finally {
        try {
            if (conexion != null && !conexion.isClosed()) {
                conexion.close();
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error al cerrar la conexión: " + ex.getMessage());
        }
    }
}
//------------------------------------------------------------------------------
    
    
//------------------------------------------------------------------------------
    //Método para agregar registros a la tabla
//------------------------------------------------------------------------------

private void AgregarME(){

String nombreME = txtNombreME.getText();
    int cantidadME = Integer.parseInt(txtCantidadME.getText()); 
    String tipoMaterialME = txtTipoMaterialME.getText();
  
    try {
        java.sql.Connection con =  Conexion.conectar(); 
        PreparedStatement ps = con.prepareStatement("INSERT INTO materiales_empaque (ME_Nombre, ME_Cantidad, 	ME_TipoMaterial) VALUES (?,?,?)");

        ps.setString(1, nombreME);
        ps.setInt(2, cantidadME);
        ps.setString(3, tipoMaterialME);
         
        ps.executeUpdate();
        JOptionPane.showMessageDialog(null, "Registro guardado");
        
        //Actualizar la tabla para que aparezca el registro nuevo
        Mostrar("materiales_empaque");
        
        //Después de guardar el registro limpiar los campos 
        LimpiarCampos();
        
        con.close(); // Cierra la conexión

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error al guardar: " + e.getMessage());
    }

}
//----------------------------------------------------------------------------


//------------------------------------------------------------------------------
    //Método de actualizar los registros de la tabla
//------------------------------------------------------------------------------

private void ActualizarME(){

    int fila = TablaME.getSelectedRow();
    int id = Integer.parseInt(TablaME.getValueAt(fila, 0).toString());    
    String nombreME = txtNombreME.getText();
    int cantidadME = Integer.parseInt(txtCantidadME.getText()); 
    String tipoMaterialME = txtTipoMaterialME.getText();
  
    try {
        java.sql.Connection con =  Conexion.conectar(); 
        PreparedStatement ps = con.prepareStatement("UPDATE materiales_empaque SET ME_Nombre=?, ME_Cantidad=?,     	ME_TipoMaterial=? WHERE idMateriales_Empaque=?");

        ps.setString(1, nombreME);
        ps.setInt(2, cantidadME);
        ps.setString(3, tipoMaterialME);
        ps.setInt(4,id);
        
        ps.executeUpdate();
        JOptionPane.showMessageDialog(null, "Registro actualizado");
        
        //Actualizar la tabla para que aparezca el registro nuevo
        Mostrar("materiales_empaque");
        
        //Después de guardar el registro limpiar los campos 
        LimpiarCampos();
        
        con.close(); // Cierra la conexión

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error al guardar: " + e.getMessage());
    }

}
//-------------------------------------------------------------------------------


//------------------------------------------------------------------------------
    //Método para eliminar un registro de la tabla
//------------------------------------------------------------------------------

private void EliminarME(){

	int fila = TablaME.getSelectedRow();
    	int id = Integer.parseInt(TablaME.getValueAt(fila, 0).toString());    
   
    try {
        java.sql.Connection con =  Conexion.conectar(); 
        PreparedStatement ps = con.prepareStatement("DELETE FROM materiales_empaque WHERE idMateriales_Empaque=?");

        ps.setInt(1,id);
        
        ps.executeUpdate();
        JOptionPane.showMessageDialog(null, "Registro eliminado");
        
        //Actualizar la tabla para que aparezca el registro nuevo
        Mostrar("materiales_empaque");
        
        //Después de guardar el registro limpiar los campos 
        LimpiarCampos();
        
        con.close(); // Cierra la conexión

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error al guardar: " + e.getMessage());
    }
}
//---------------------------------------------------------------------------------


//------------------------------------------------------------------------------
    //Método para buscar un registro de la tabla 
//------------------------------------------------------------------------------ 

private void BuscarME(){

    TableRowSorter<TableModel> sorter = new TableRowSorter<>(TablaME.getModel());
    TablaME.setRowSorter(sorter);
    
    String textoBusqueda = txtNombreME.getText().trim();
    
    if (textoBusqueda.isEmpty()) {
        sorter.setRowFilter(null); // Muestra todos los registros si el campo está vacío
    } else {
        sorter.setRowFilter(RowFilter.regexFilter("(?i)" + textoBusqueda)); // Filtra ignorando mayúsculas/minúsculas
    }

}
//-------------------------------------------------------------------------------
    
    
//------------------------------------------------------------------------------
  //Método para limpiar los campos
//------------------------------------------------------------------------------    
private void LimpiarCampos(){

        txtNombreME.setText("");
        txtCantidadME.setText("");
        txtTipoMaterialME.setText("");

}    
//------------------------------------------------------------------------------


//------------------------------------------------------------------------------
    //Método para limitar a escribir solo números en los Textfield
//------------------------------------------------------------------------------
    private void limitarNumeros(JTextField textField) {
        textField.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (!Character.isDigit(c)) { // Solo permite números
                    e.consume(); // Bloquea la entrada si no es un número
                }
            }
        });
    }
//------------------------------------------------------------------------------
    
    
//------------------------------------------------------------------------------
    //Método para txtFields
//------------------------------------------------------------------------------
    private void TxtFields(){
    
    limitarNumeros(txtCantidadME);
  
    }
//------------------------------------------------------------------------------
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaME;
    private javax.swing.JButton btnActualizarME;
    private javax.swing.JButton btnAgregarME;
    private javax.swing.JButton btnBuscarME;
    private javax.swing.JButton btnEliminarME;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JButton btnRegresarME;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCantidadME;
    private javax.swing.JLabel lblMaterialesEmpaque;
    private javax.swing.JLabel lblNombreME;
    private javax.swing.JLabel lblTipoMaterialME;
    private javax.swing.JTextArea txtArea;
    private javax.swing.JTextField txtCantidadME;
    private javax.swing.JTextField txtNombreME;
    private javax.swing.JTextField txtTipoMaterialME;
    // End of variables declaration//GEN-END:variables
}
