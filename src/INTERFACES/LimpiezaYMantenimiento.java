/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package INTERFACES;

import ConexionBD.Conexion;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Paola Barrera Tenorio 2192007348
 */
public class LimpiezaYMantenimiento extends javax.swing.JFrame {

    /**
     * Creates new form LimpiezaYMantenimiento
     */
    public LimpiezaYMantenimiento() {
        initComponents();
        
        this.setTitle("Panificadora La Izcalli");
        this.setLocationRelativeTo(LimpiezaYMantenimiento.this);
        this.setResizable(false);
        
        Mostrar("Limpieza_Mantenimiento");
        LimpiarCampos();
        txtArea.setEditable(false);
        TxtFields();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lblLimpiezaMantenimiento = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btnRegresarLM = new javax.swing.JButton();
        lblNombreLM = new javax.swing.JLabel();
        lblCantidadLM = new javax.swing.JLabel();
        lblTipoMaterialLM = new javax.swing.JLabel();
        txtNombreLM = new javax.swing.JTextField();
        txtCantidadLM = new javax.swing.JTextField();
        txtTipoMaterialLM = new javax.swing.JTextField();
        btnBuscarLM = new javax.swing.JButton();
        btnAgregarLM = new javax.swing.JButton();
        btnActualizarLM = new javax.swing.JButton();
        btnEliminarLM = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaLM = new javax.swing.JTable();
        btnRegresar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 245, 225));

        jPanel2.setBackground(new java.awt.Color(1, 87, 155));

        lblLimpiezaMantenimiento.setFont(new java.awt.Font("STLiti", 0, 48)); // NOI18N
        lblLimpiezaMantenimiento.setForeground(new java.awt.Color(255, 255, 255));
        lblLimpiezaMantenimiento.setText("-Limpieza y Mantenimiento -");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(258, Short.MAX_VALUE)
                .addComponent(lblLimpiezaMantenimiento)
                .addGap(264, 264, 264))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(lblLimpiezaMantenimiento)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(1, 87, 155));

        btnRegresarLM.setBackground(new java.awt.Color(255, 245, 225));
        btnRegresarLM.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        btnRegresarLM.setText("Regresar al menú");
        btnRegresarLM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarLMActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(btnRegresarLM)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(btnRegresarLM)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        lblNombreLM.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        lblNombreLM.setText("Nombre");

        lblCantidadLM.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        lblCantidadLM.setText("Cantidad");

        lblTipoMaterialLM.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        lblTipoMaterialLM.setText("Tipo de material");

        txtNombreLM.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N

        txtCantidadLM.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N

        txtTipoMaterialLM.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N

        btnBuscarLM.setBackground(new java.awt.Color(1, 87, 155));
        btnBuscarLM.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        btnBuscarLM.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscarLM.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Buscar.png"))); // NOI18N
        btnBuscarLM.setText("Buscar");
        btnBuscarLM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarLMActionPerformed(evt);
            }
        });

        btnAgregarLM.setBackground(new java.awt.Color(1, 87, 155));
        btnAgregarLM.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        btnAgregarLM.setForeground(new java.awt.Color(255, 255, 255));
        btnAgregarLM.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Agregar.png"))); // NOI18N
        btnAgregarLM.setText("Agregar");
        btnAgregarLM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarLMActionPerformed(evt);
            }
        });

        btnActualizarLM.setBackground(new java.awt.Color(1, 87, 155));
        btnActualizarLM.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        btnActualizarLM.setForeground(new java.awt.Color(255, 255, 255));
        btnActualizarLM.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Actualizar.png"))); // NOI18N
        btnActualizarLM.setText("Actualizar");
        btnActualizarLM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarLMActionPerformed(evt);
            }
        });

        btnEliminarLM.setBackground(new java.awt.Color(1, 87, 155));
        btnEliminarLM.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        btnEliminarLM.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminarLM.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/borrar.png"))); // NOI18N
        btnEliminarLM.setText("Eliminar");
        btnEliminarLM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarLMActionPerformed(evt);
            }
        });

        TablaLM.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        TablaLM.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TablaLM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaLMMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaLM);

        btnRegresar.setBackground(new java.awt.Color(1, 87, 155));
        btnRegresar.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        btnRegresar.setForeground(new java.awt.Color(255, 255, 255));
        btnRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Regreso.png"))); // NOI18N
        btnRegresar.setText("Regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        txtArea.setColumns(20);
        txtArea.setFont(new java.awt.Font("Bell MT", 0, 14)); // NOI18N
        txtArea.setRows(5);
        txtArea.setText("BUSCAR ARTÍCULO\nEscriba su nombre y presione el botón buscar \n\nAGREGAR ARTÍCULO\nLlene todos los campos con su información y presione agregar\n\nACTUALIZAR DATOS\nSeleccione el registro en la tabla, modifique el dato y presione el botón actualizar\n\nELIMINAR ARTÍCULO\nSeleccione el registro y presione el botón eliminar");
        jScrollPane2.setViewportView(txtArea);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 982, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblNombreLM)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtNombreLM, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblTipoMaterialLM)
                                .addGap(28, 28, 28)
                                .addComponent(txtTipoMaterialLM, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblCantidadLM)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtCantidadLM, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(95, 95, 95)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRegresar)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnAgregarLM, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnActualizarLM)
                        .addComponent(btnEliminarLM, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnBuscarLM, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(127, 127, 127))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNombreLM)
                            .addComponent(txtNombreLM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCantidadLM)
                            .addComponent(txtCantidadLM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTipoMaterialLM)
                            .addComponent(txtTipoMaterialLM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addComponent(btnActualizarLM)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAgregarLM)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBuscarLM)
                        .addGap(12, 12, 12)
                        .addComponent(btnEliminarLM)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRegresar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

//Botón Regresar
    private void btnRegresarLMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarLMActionPerformed
        MenuInventario inventario = new MenuInventario();
        inventario.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnRegresarLMActionPerformed

//Botón Buscar Artículo
    private void btnBuscarLMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarLMActionPerformed
        BuscarArticulo();
    }//GEN-LAST:event_btnBuscarLMActionPerformed
    
//Botón Agregar Artículo
    private void btnAgregarLMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarLMActionPerformed
        AgregarArticulo();
    }//GEN-LAST:event_btnAgregarLMActionPerformed
    
//Botón Actualziar Artículo
    private void btnActualizarLMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarLMActionPerformed
        ActualizarArticulo();
    }//GEN-LAST:event_btnActualizarLMActionPerformed

//Botón Eliminar Articulo
    private void btnEliminarLMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarLMActionPerformed
        EliminarArticulo();
    }//GEN-LAST:event_btnEliminarLMActionPerformed
    
    
//------------------------------------------------------------------------------
    //Autollenado de los campos al seleccionar un registro
//------------------------------------------------------------------------------    
    private void TablaLMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaLMMouseClicked
        
        try{
            int fila = TablaLM.getSelectedRow();
            int id = Integer.parseInt(TablaLM.getValueAt(fila, 0).toString());
            
            PreparedStatement ps;
            ResultSet rs;
            
            java.sql.Connection con =  Conexion.conectar();
            ps = con.prepareStatement("SELECT LM_Nombre, LM_Cantidad, LM_TipoMaterial FROM limpieza_mantenimiento WHERE idLimpieza_Mantenimiento=?");
            ps.setInt(1, id);
            rs = ps.executeQuery();
            
            while(rs.next()){
            txtNombreLM.setText(rs.getString("LM_Nombre"));
            txtCantidadLM.setText(rs.getString("LM_Cantidad"));
            txtTipoMaterialLM.setText(rs.getString("LM_TipoMaterial"));
            }
       
       }catch(SQLException e){
           JOptionPane.showMessageDialog(null, e);
       }
    }//GEN-LAST:event_TablaLMMouseClicked

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        LimpiarCampos();
        Mostrar("limpieza_mantenimiento");
    }//GEN-LAST:event_btnRegresarActionPerformed
//------------------------------------------------------------------------------
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LimpiezaYMantenimiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LimpiezaYMantenimiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LimpiezaYMantenimiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LimpiezaYMantenimiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LimpiezaYMantenimiento().setVisible(true);
            }
        });
    }
    
//------------------------------------------------------------------------------
    //Método para mostrar los registros en la tabla Materiales de Empaque        
//------------------------------------------------------------------------------
    public void Mostrar(String tabla) {
    String sql = "SELECT * FROM " + tabla;
    Conexion con = new Conexion();
    java.sql.Connection conexion = con.conectar();

    DefaultTableModel model = new DefaultTableModel();
    String[] columnas = {"ID", "Nombre", "Cantidad", "Tipo de Material"};
    
    
    for (String columna : columnas) {
        model.addColumn(columna);
    }

    TablaLM.setRowSorter(null);
    TablaLM.setModel(model);

    try (java.sql.Statement st = conexion.createStatement(); ResultSet rs = st.executeQuery(sql)) {
        while (rs.next()) {
            String[] datos = new String[columnas.length];
            for (int i = 0; i < columnas.length; i++) {
                datos[i] = rs.getString(i + 1);
            }
          
            model.addRow(datos);
        }
        
        // Modificar el ancho de las columnas
        TableColumnModel modeloColumnas = TablaLM.getColumnModel();
        modeloColumnas.getColumn(0).setPreferredWidth(1);  // ID
        modeloColumnas.getColumn(1).setPreferredWidth(10); // Nombre
        modeloColumnas.getColumn(2).setPreferredWidth(10); // Cantidad
        modeloColumnas.getColumn(3).setPreferredWidth(10); // Tipo de Material

        
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Error en executeQuery: " + e.getMessage());
    } finally {
        try {
            if (conexion != null && !conexion.isClosed()) {
                conexion.close();
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error al cerrar la conexión: " + ex.getMessage());
        }
    }
} 
//------------------------------------------------------------------------------
    
    
//------------------------------------------------------------------------------
    //Método para buscar un registro de la tabla 
//------------------------------------------------------------------------------  

private void BuscarArticulo(){

TableRowSorter<TableModel> sorter = new TableRowSorter<>(TablaLM.getModel());
    TablaLM.setRowSorter(sorter);
    
    String textoBusqueda = txtNombreLM.getText().trim();
    
    if (textoBusqueda.isEmpty()) {
        sorter.setRowFilter(null); // Muestra todos los registros si el campo está vacío
    } else {
        sorter.setRowFilter(RowFilter.regexFilter("(?i)" + textoBusqueda)); // Filtra ignorando mayúsculas/minúsculas
    }

}
//------------------------------------------------------------------------------


//------------------------------------------------------------------------------
    //Método para agregar registros a la tabla
//------------------------------------------------------------------------------

private void AgregarArticulo(){

String nombreLM = txtNombreLM.getText();
    int cantidadLM = Integer.parseInt(txtCantidadLM.getText()); 
    String tipoMaterialLM = txtTipoMaterialLM.getText();
  
    try {
        java.sql.Connection con =  Conexion.conectar(); 
        PreparedStatement ps = con.prepareStatement("INSERT INTO limpieza_mantenimiento (LM_Nombre, LM_Cantidad, LM_TipoMaterial) VALUES (?,?,?)");

        ps.setString(1, nombreLM);
        ps.setInt(2, cantidadLM);
        ps.setString(3, tipoMaterialLM);
         
        ps.executeUpdate();
        JOptionPane.showMessageDialog(null, "Registro guardado");
        
        //Actualizar la tabla para que aparezca el registro nuevo
        Mostrar("limpieza_mantenimiento");
        
        //Después de guardar el registro limpiar los campos 
        LimpiarCampos();
        
        con.close(); // Cierra la conexión

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error al guardar: " + e.getMessage());
    }

}
//------------------------------------------------------------------------------


//------------------------------------------------------------------------------
    //Método de actualizar los registros de la tabla
//------------------------------------------------------------------------------

private void ActualizarArticulo(){

int fila = TablaLM.getSelectedRow();
    int id = Integer.parseInt(TablaLM.getValueAt(fila, 0).toString());
    String nombreLM = txtNombreLM.getText();
    int cantidadLM = Integer.parseInt(txtCantidadLM.getText()); 
    String tipoMaterialLM = txtTipoMaterialLM.getText();
  
    try {
        java.sql.Connection con =  Conexion.conectar(); 
        PreparedStatement ps = con.prepareStatement("UPDATE limpieza_mantenimiento SET LM_Nombre=?, LM_Cantidad=?, LM_TipoMaterial=? WHERE idLimpieza_Mantenimiento=?");

        ps.setString(1, nombreLM);
        ps.setInt(2, cantidadLM);
        ps.setString(3, tipoMaterialLM);
        ps.setInt(4,id);
         
        ps.executeUpdate();
        JOptionPane.showMessageDialog(null, "Registro actualizado");
        
        //Actualizar la tabla para que aparezca el registro nuevo
        Mostrar("limpieza_mantenimiento");
        
        //Después de guardar el registro limpiar los campos 
        LimpiarCampos();
        
        con.close(); // Cierra la conexión

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error al guardar: " + e.getMessage());
    }

}
//------------------------------------------------------------------------------


//------------------------------------------------------------------------------
    //Método para eliminar un registro de la tabla
//------------------------------------------------------------------------------

private void EliminarArticulo(){

int fila = TablaLM.getSelectedRow();
    int id = Integer.parseInt(TablaLM.getValueAt(fila, 0).toString());    
   
    try {
        java.sql.Connection con =  Conexion.conectar(); 
        PreparedStatement ps = con.prepareStatement("DELETE FROM limpieza_mantenimiento WHERE idLimpieza_Mantenimiento=?");

        ps.setInt(1,id);
        
        ps.executeUpdate();
        JOptionPane.showMessageDialog(null, "Registro eliminado");
        
        //Actualizar la tabla para que aparezca el registro nuevo
        Mostrar("limpieza_mantenimiento");
        
        //Después de guardar el registro limpiar los campos 
        LimpiarCampos();
        
        con.close(); // Cierra la conexión

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error al guardar: " + e.getMessage());
    }

}
//------------------------------------------------------------------------------

    
//------------------------------------------------------------------------------
  //Método para limpiar los campos
//------------------------------------------------------------------------------    
private void LimpiarCampos(){

        txtNombreLM.setText("");
        txtCantidadLM.setText("");
        txtTipoMaterialLM.setText("");

}    
//------------------------------------------------------------------------------  


//------------------------------------------------------------------------------
    //Método para limitar a escribir solo números en los Textfield
//------------------------------------------------------------------------------
    private void limitarNumeros(JTextField textField) {
        textField.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (!Character.isDigit(c)) { // Solo permite números
                    e.consume(); // Bloquea la entrada si no es un número
                }
            }
        });
    }
//------------------------------------------------------------------------------
    
    
//------------------------------------------------------------------------------
    //Método para txtFields
//------------------------------------------------------------------------------
    private void TxtFields(){
    
    limitarNumeros(txtCantidadLM);
  
    }
//------------------------------------------------------------------------------
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaLM;
    private javax.swing.JButton btnActualizarLM;
    private javax.swing.JButton btnAgregarLM;
    private javax.swing.JButton btnBuscarLM;
    private javax.swing.JButton btnEliminarLM;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JButton btnRegresarLM;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCantidadLM;
    private javax.swing.JLabel lblLimpiezaMantenimiento;
    private javax.swing.JLabel lblNombreLM;
    private javax.swing.JLabel lblTipoMaterialLM;
    private javax.swing.JTextArea txtArea;
    private javax.swing.JTextField txtCantidadLM;
    private javax.swing.JTextField txtNombreLM;
    private javax.swing.JTextField txtTipoMaterialLM;
    // End of variables declaration//GEN-END:variables
}
