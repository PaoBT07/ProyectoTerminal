/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package INTERFACES;

import ConexionBD.Conexion;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import java.sql.PreparedStatement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Paola Barrera Tenorio 2192007348
 */
public class Equipo extends javax.swing.JFrame {


    public Equipo() {
        initComponents();
        
        this.setTitle("Panificadora La Izcalli");
        this.setLocationRelativeTo(Equipo.this);
        this.setResizable(false);
        
        //Para que los campos del formulario aparezcan vacíos al ingresar al JFrame
        LimpiarCampos();
        
        //Muestra la tabla al ingresar al formulario 
        Mostrar("equipo");
        
        txtArea.setEditable(false);
        TxtFields();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btnRegresarE = new javax.swing.JButton();
        lblNombreE = new javax.swing.JLabel();
        lblCantidadE = new javax.swing.JLabel();
        lblMarcaE = new javax.swing.JLabel();
        lblVidaUtilE = new javax.swing.JLabel();
        lblFechaAdquisicionE = new javax.swing.JLabel();
        txtNombreE = new javax.swing.JTextField();
        txtCantidadE = new javax.swing.JTextField();
        txtMarcaE = new javax.swing.JTextField();
        txtVidaUtilE = new javax.swing.JTextField();
        txtFechaAdquisicionE = new javax.swing.JTextField();
        btnBuscarE = new javax.swing.JButton();
        btnAgregarE = new javax.swing.JButton();
        btnActualizarE = new javax.swing.JButton();
        btnEliminarE = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaEquipo = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtArea = new javax.swing.JTextArea();
        btnRegresar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 245, 225));

        jPanel2.setBackground(new java.awt.Color(1, 87, 155));

        jLabel1.setFont(new java.awt.Font("STLiti", 0, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("- Equipo -");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(404, 404, 404)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(1, 87, 155));

        btnRegresarE.setBackground(new java.awt.Color(255, 245, 225));
        btnRegresarE.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        btnRegresarE.setText("Regresar al menú");
        btnRegresarE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarEActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(btnRegresarE)
                .addContainerGap(804, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(btnRegresarE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        lblNombreE.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        lblNombreE.setText("Nombre");

        lblCantidadE.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        lblCantidadE.setText("Cantidad");

        lblMarcaE.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        lblMarcaE.setText("Marca");

        lblVidaUtilE.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        lblVidaUtilE.setText("Vida Útil");

        lblFechaAdquisicionE.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        lblFechaAdquisicionE.setText("Fecha de adquisición");

        txtNombreE.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N

        txtCantidadE.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N

        txtMarcaE.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N

        txtVidaUtilE.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N

        txtFechaAdquisicionE.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N

        btnBuscarE.setBackground(new java.awt.Color(1, 87, 155));
        btnBuscarE.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        btnBuscarE.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscarE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Buscar.png"))); // NOI18N
        btnBuscarE.setText("Buscar");
        btnBuscarE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarEActionPerformed(evt);
            }
        });

        btnAgregarE.setBackground(new java.awt.Color(1, 87, 155));
        btnAgregarE.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        btnAgregarE.setForeground(new java.awt.Color(255, 255, 255));
        btnAgregarE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Agregar.png"))); // NOI18N
        btnAgregarE.setText("Agregar");
        btnAgregarE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarEActionPerformed(evt);
            }
        });

        btnActualizarE.setBackground(new java.awt.Color(1, 87, 155));
        btnActualizarE.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        btnActualizarE.setForeground(new java.awt.Color(255, 255, 255));
        btnActualizarE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Actualizar.png"))); // NOI18N
        btnActualizarE.setText("Actualizar");
        btnActualizarE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarEActionPerformed(evt);
            }
        });

        btnEliminarE.setBackground(new java.awt.Color(1, 87, 155));
        btnEliminarE.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        btnEliminarE.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminarE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/borrar.png"))); // NOI18N
        btnEliminarE.setText("Eliminar");
        btnEliminarE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarEActionPerformed(evt);
            }
        });

        TablaEquipo.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        TablaEquipo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TablaEquipo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaEquipoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaEquipo);

        txtArea.setColumns(20);
        txtArea.setFont(new java.awt.Font("Bell MT", 0, 14)); // NOI18N
        txtArea.setRows(5);
        txtArea.setText("BUSCAR EQUIPO\nEscriba su nombre y presione el botón buscar \n\nAGREGAR EQUIPO\nLlene todos los campos con su información y presione agregar\n\nACTUALIZAR DATOS\nSeleccione el registro en la tabla, modifique el dato y presione el botón actualizar\n\nELIMINAR EQUIPO\nSeleccione el registro y presione el botón eliminar");
        jScrollPane2.setViewportView(txtArea);

        btnRegresar.setBackground(new java.awt.Color(1, 87, 155));
        btnRegresar.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        btnRegresar.setForeground(new java.awt.Color(255, 255, 255));
        btnRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Regreso.png"))); // NOI18N
        btnRegresar.setText("Regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(153, 153, 153));
        jLabel2.setText("Formato de fecha: 2025-05-09");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(151, 151, 151)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblNombreE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtNombreE, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblCantidadE)
                                            .addComponent(lblMarcaE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtMarcaE, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtCantidadE, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(lblFechaAdquisicionE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtFechaAdquisicionE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(lblVidaUtilE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(txtVidaUtilE, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(108, 108, 108)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(43, 43, 43)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnActualizarE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnRegresar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAgregarE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnBuscarE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEliminarE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 920, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(347, 347, 347)
                        .addComponent(jLabel2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 17, Short.MAX_VALUE)
                        .addComponent(btnActualizarE, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnAgregarE, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBuscarE, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNombreE)
                            .addComponent(txtNombreE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCantidadE)
                            .addComponent(txtCantidadE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMarcaE)
                            .addComponent(txtMarcaE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblVidaUtilE)
                            .addComponent(txtVidaUtilE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblFechaAdquisicionE)
                            .addComponent(txtFechaAdquisicionE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnEliminarE, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRegresar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(7, 7, 7)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1028, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Botón de regresar a la interfaz anterior
    private void btnRegresarEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarEActionPerformed
        MenuInventario inventario = new MenuInventario();
        inventario.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnRegresarEActionPerformed


//Botón Agregar Equipo
    private void btnAgregarEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarEActionPerformed
       AgregarEquipo();  
    }//GEN-LAST:event_btnAgregarEActionPerformed


//------------------------------------------------------------------------------
    //Autollenado de los campos al seleccionar un registro
//------------------------------------------------------------------------------
    private void TablaEquipoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaEquipoMouseClicked
       
        try{
            int fila = TablaEquipo.getSelectedRow();
            int id = Integer.parseInt(TablaEquipo.getValueAt(fila, 0).toString());
            
            PreparedStatement ps;
            ResultSet rs;
            
            java.sql.Connection con =  Conexion.conectar();
            ps = con.prepareStatement("SELECT E_Nombre, E_Cantidad, E_Marca, E_FechaAdquisicion, E_VidaUtil FROM equipo WHERE idEquipo=?");
            ps.setInt(1, id);
            rs = ps.executeQuery();
            
            while(rs.next()){
            txtNombreE.setText(rs.getString("E_Nombre"));
            txtCantidadE.setText(rs.getString("E_Cantidad"));
            txtMarcaE.setText(rs.getString("E_Marca"));
            txtFechaAdquisicionE.setText(rs.getString("E_FechaAdquisicion"));
            txtVidaUtilE.setText(rs.getString("E_VidaUtil"));
            }
       
       }catch(SQLException e){
           JOptionPane.showMessageDialog(null, e);
       }
    }//GEN-LAST:event_TablaEquipoMouseClicked
//------------------------------------------------------------------------------
    
    
//Botón Actualizar Equipo
    private void btnActualizarEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarEActionPerformed
        ActualizarEquipo();
    }//GEN-LAST:event_btnActualizarEActionPerformed

    
//Botón Eliminar Equipo
    private void btnEliminarEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarEActionPerformed
    EliminarEquipo();
    }//GEN-LAST:event_btnEliminarEActionPerformed
    
    
//Botón Buscar Equipo
    private void btnBuscarEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarEActionPerformed
    BuscarEquipo();
    }//GEN-LAST:event_btnBuscarEActionPerformed

//Botón Regresar
    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
       LimpiarCampos();
        Mostrar("equipo");
    }//GEN-LAST:event_btnRegresarActionPerformed

    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Equipo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Equipo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Equipo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Equipo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Equipo().setVisible(true);
            }
        });
    }
    
//------------------------------------------------------------------------------
    //Método para mostrar los registros de la entidad EQUIPO
//------------------------------------------------------------------------------
    public void Mostrar(String tabla) {
    String sql = "SELECT * FROM " + tabla;
    Conexion con = new Conexion();
    java.sql.Connection conexion = con.conectar();

    DefaultTableModel model = new DefaultTableModel();
    String[] columnas = {"ID", "Nombre", "Cantidad", "Marca", "Fecha de Adquisición", "Vida Útil"};
    
    
    for (String columna : columnas) {
        model.addColumn(columna);
    }

    TablaEquipo.setRowSorter(null);
    TablaEquipo.setModel(model);

    try (java.sql.Statement st = conexion.createStatement(); ResultSet rs = st.executeQuery(sql)) {
        while (rs.next()) {
            String[] datos = new String[columnas.length];
            for (int i = 0; i < columnas.length; i++) {
                datos[i] = rs.getString(i + 1);
            }
          
            model.addRow(datos);
        }
        
        // Modificar el ancho de las columnas
        TableColumnModel modeloColumnas = TablaEquipo.getColumnModel();
        modeloColumnas.getColumn(0).setPreferredWidth(1);  // ID
        modeloColumnas.getColumn(1).setPreferredWidth(10); // Nombre
        modeloColumnas.getColumn(2).setPreferredWidth(10); // Cantidad
        modeloColumnas.getColumn(3).setPreferredWidth(10); // Marca
        modeloColumnas.getColumn(4).setPreferredWidth(30); // Fecha Adquisicion
        modeloColumnas.getColumn(5).setPreferredWidth(30); // Vida Util
        
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Error en executeQuery: " + e.getMessage());
    } finally {
        try {
            if (conexion != null && !conexion.isClosed()) {
                conexion.close();
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error al cerrar la conexión: " + ex.getMessage());
        }
    }
}
//------------------------------------------------------------------------------
    
    
//------------------------------------------------------------------------------
    //Método para agregar registros a la tabla
//------------------------------------------------------------------------------

private void AgregarEquipo() {
    String nombreEquipo = txtNombreE.getText();
    int cantidadEquipo = Integer.parseInt(txtCantidadE.getText()); 
    String marcaEquipo = txtMarcaE.getText();
    int vidaUtilEquipo = Integer.parseInt(txtVidaUtilE.getText()); 

    Date fechaAdEquipo = parseDate(txtFechaAdquisicionE.getText()); 
    if (fechaAdEquipo == null) {
        // Usar la fecha actual si es inválida
        fechaAdEquipo = new Date(); 
        JOptionPane.showMessageDialog(null, "Fecha inválida. Se usará la fecha actual.");
    }

    java.sql.Date fechaSQL = new java.sql.Date(fechaAdEquipo.getTime());

    try {
        java.sql.Connection con = Conexion.conectar(); 
        PreparedStatement ps = con.prepareStatement("INSERT INTO equipo (E_Nombre, E_Cantidad, E_Marca, E_FechaAdquisicion, E_VidaUtil) VALUES (?, ?, ?, ?, ?)");

        ps.setString(1, nombreEquipo);
        ps.setInt(2, cantidadEquipo);
        ps.setString(3, marcaEquipo);
        ps.setDate(4, fechaSQL);
        ps.setInt(5, vidaUtilEquipo);

        ps.executeUpdate();
        JOptionPane.showMessageDialog(null, "Registro guardado");

        Mostrar("equipo");
        LimpiarCampos();
        con.close();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error al guardar: " + e.getMessage());
    }
}
//------------------------------------------------------------------------------


//------------------------------------------------------------------------------
    //Método de actualizar los registros de la tabla
//------------------------------------------------------------------------------

private void ActualizarEquipo(){

int fila = TablaEquipo.getSelectedRow();
    int id = Integer.parseInt(TablaEquipo.getValueAt(fila, 0).toString());
    String nombreEquipo = txtNombreE.getText();
    int cantidadEquipo = Integer.parseInt(txtCantidadE.getText()); 
    String marcaEquipo = txtMarcaE.getText();
    int vidaUtilEquipo = Integer.parseInt(txtVidaUtilE.getText()); 
    Date fechaAdEquipo = parseDate(txtFechaAdquisicionE.getText()); 
    
    if (fechaAdEquipo == null) {
        JOptionPane.showMessageDialog(null, "Fecha inválida. Ingrese en formato yyyy-MM-dd.");
        return; // Sale del método si la fecha es inválida
    }
    
    java.sql.Date fechaSQL = new java.sql.Date(fechaAdEquipo.getTime());

    try {
        java.sql.Connection con =  Conexion.conectar(); 
        PreparedStatement ps = con.prepareStatement("UPDATE equipo SET E_Nombre=?, E_Cantidad=?, E_Marca=?, E_FechaAdquisicion=?, E_VidaUtil=? WHERE idEquipo=?");

        ps.setString(1, nombreEquipo);
        ps.setInt(2, cantidadEquipo);
        ps.setString(3, marcaEquipo);
        ps.setDate(4, fechaSQL);
        ps.setInt(5, vidaUtilEquipo); 
        ps.setInt(6, id);

        ps.executeUpdate();
        JOptionPane.showMessageDialog(null, "Registro actualizado");
        
        //Actualizar la tabla para que aparezca el registro nuevo
        Mostrar("equipo");
        
        //Después de actualizar el registro, limpia los campos 
        LimpiarCampos();
        
        con.close(); // Cierra la conexión

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error al guardar: " + e.getMessage());
    }

}
//------------------------------------------------------------------------------


//------------------------------------------------------------------------------
    //Método para eliminar un registro de la tabla
//------------------------------------------------------------------------------

private void EliminarEquipo(){

int fila = TablaEquipo.getSelectedRow();
    int id = Integer.parseInt(TablaEquipo.getValueAt(fila, 0).toString());
    
    try {
        java.sql.Connection con =  Conexion.conectar(); 
        PreparedStatement ps = con.prepareStatement("DELETE FROM equipo WHERE idEquipo=?");

        ps.setInt(1, id);

        ps.executeUpdate();
        JOptionPane.showMessageDialog(null, "Registro eliminado");
        
        //Actualizar la tabla para que aparezca el registro nuevo
        Mostrar("equipo");
        
        //Después de actualizar el registro, limpia los campos 
        LimpiarCampos();
        
        con.close(); // Cierra la conexión

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error al guardar: " + e.getMessage());
    }

}
//-------------------------------------------------------------------------------------


//------------------------------------------------------------------------------
    //Método para buscar un registro de la tabla 
//------------------------------------------------------------------------------

private void BuscarEquipo(){

TableRowSorter<TableModel> sorter = new TableRowSorter<>(TablaEquipo.getModel());
    TablaEquipo.setRowSorter(sorter);
    
    String textoBusqueda = txtNombreE.getText().trim();
    
    if (textoBusqueda.isEmpty()) {
        sorter.setRowFilter(null); // Muestra todos los registros si el campo está vacío
    } else {
        sorter.setRowFilter(RowFilter.regexFilter("(?i)" + textoBusqueda)); // Filtra ignorando mayúsculas/minúsculas
    }

    
}
//----------------------------------------------------------------------------------


    
//------------------------------------------------------------------------------
    //Método para limpiar los campos
//------------------------------------------------------------------------------    
private void LimpiarCampos(){

        txtNombreE.setText("");
        txtCantidadE.setText("");
        txtMarcaE.setText("");
        txtVidaUtilE.setText("");
        txtFechaAdquisicionE.setText("");

}
//------------------------------------------------------------------------------


//------------------------------------------------------------------------------
    //Método para limitar a escribir solo números en los Textfield
//------------------------------------------------------------------------------
    private void limitarNumeros(JTextField textField) {
        textField.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (!Character.isDigit(c)) { // Solo permite números
                    e.consume(); // Bloquea la entrada si no es un número
                }
            }
        });
    }
//------------------------------------------------------------------------------
    
    
//------------------------------------------------------------------------------
    //Método para txtFields
//------------------------------------------------------------------------------
    private void TxtFields(){
    
    limitarNumeros(txtCantidadE);
    limitarNumeros(txtVidaUtilE);
  
    }
//------------------------------------------------------------------------------
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaEquipo;
    private javax.swing.JButton btnActualizarE;
    private javax.swing.JButton btnAgregarE;
    private javax.swing.JButton btnBuscarE;
    private javax.swing.JButton btnEliminarE;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JButton btnRegresarE;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCantidadE;
    private javax.swing.JLabel lblFechaAdquisicionE;
    private javax.swing.JLabel lblMarcaE;
    private javax.swing.JLabel lblNombreE;
    private javax.swing.JLabel lblVidaUtilE;
    private javax.swing.JTextArea txtArea;
    private javax.swing.JTextField txtCantidadE;
    private javax.swing.JTextField txtFechaAdquisicionE;
    private javax.swing.JTextField txtMarcaE;
    private javax.swing.JTextField txtNombreE;
    private javax.swing.JTextField txtVidaUtilE;
    // End of variables declaration//GEN-END:variables

    private int ParseInt(String text) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    private Date parseDate(String fechaTexto) {
    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
    sdf.setLenient(false); // Asegura que solo se acepten fechas válidas
    try {
        return sdf.parse(fechaTexto);
    } catch (ParseException e) {
        return null; // Devuelve null si no es válida
    }
    }
}
